name: TANISMART CI/CD pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: tanismart
          MYSQL_USER: dbeaver
          MYSQL_PASSWORD: '@Polindra123'
        ports:
          - 3306:3306
        options: >-
          --health-cmd "mysqladmin ping -p$$MYSQL_ROOT_PASSWORD"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.3'
        extensions: mbstring, ctype, fileinfo, openssl, PDO, tokenizer, xml, mysql, pdo_mysql
        coverage: none

    - name: Install dependencies
      run: |
        composer install --prefer-dist --no-interaction --no-progress

    - name: Configure MySQL
      run: |
        cp .env.example .env
        sed -i 's/DB_CONNECTION=mysql/DB_CONNECTION=mysql/' .env
        sed -i 's/DB_HOST=127.0.0.1/DB_HOST=127.0.0.1/' .env
        sed -i 's/DB_PORT=3306/DB_PORT=3306/' .env
        sed -i 's/DB_DATABASE=laravel/DB_DATABASE=tanismart/' .env
        sed -i 's/DB_USERNAME=root/DB_USERNAME=dbeaver/' .env
        sed -i 's/DB_PASSWORD=/DB_PASSWORD=@Polindra123/' .env

    - name: Debug database environment
      run: grep DB_ .env

    - name: Generate app key
      run: php artisan key:generate

    - name: Wait for MySQL to be ready
      run: |
        for i in {1..10}; do
          if mysqladmin ping -h127.0.0.1 -udbeaver -p@Polindra123 --silent; then
            echo "MySQL is ready!"
            break
          fi
          echo "Waiting for MySQL... Attempt $i/10"
          sleep 3
        done

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Install NPM dependencies
      run: npm ci

    - name: Build frontend
      run: npm run build

    - name: Run database migrations and seed
      run: php artisan migrate:fresh --seed

    - name: Execute tests
      run: php artisan test

    - name: Upload artifact for deployment
      uses: actions/upload-artifact@v4
      with:
        name: laravel-app
        path: |
          .
          !.github/
          !.git/
          !node_modules/
          !vendor/
          !storage/debugbar/
        retention-days: 1

  deploy:
    needs: build-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    name: Tanismart Deployment to VPS

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: laravel-app
          path: ./deploy

      - name: Install sshpass
        run: sudo apt-get update && sudo apt-get install -y sshpass

      - name: Deploy to VPS via SSH (password-based)
        run: |
          echo "ðŸ”§ Mulai proses deploy Laravel..."
          sshpass -p "${{ secrets.SSH_KEY_PASSWORD }}" ssh -o StrictHostKeyChecking=no -p 22 ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "sudo mkdir -p ~/laravel-app-tanismart"
          sudo chmod -R 777 ./laravel-app-tanismart/
          sshpass -p "${{ secrets.SSH_KEY_PASSWORD }}" scp -o StrictHostKeyChecking=no -P 22 -r ./deploy/* ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:~/laravel-app-tanismart/
          sshpass -p "${{ secrets.SSH_KEY_PASSWORD }}" ssh -o StrictHostKeyChecking=no -p 22 ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
          cd ~/laravel-app-tanismart

            REMOTE_DIR=/var/www/laravel-d4rpl2c-kelompok-4/

            sudo mkdir -p "$REMOTE_DIR"
            rsync -avz --delete \
              --exclude='.env' \
              --exclude='storage' \
              --exclude='.git' \
              --exclude='.github' \
              ~/laravel-app-tanismart/ "$REMOTE_DIR"

            cd "$REMOTE_DIR" || exit

            sudo mkdir -p storage/framework/{cache,sessions,testing,views}
            sudo mkdir -p storage/logs

            sudo chown -R www-data:www-data storage
            sudo chmod -R 775 storage

            php artisan config:clear
            php artisan cache:clear
            php artisan view:clear

            echo "âœ… Deploy selesai!"

            # Run deployment commands
          cd /var/www/laravel-d4rpl2c-kelompok-4
          sudo -u www-data composer install --optimize-autoloader --no-dev
          sudo -u www-data php artisan config:cache
          sudo -u www-data php artisan route:cache
          sudo -u www-data php artisan view:cache
          sudo -u www-data php artisan migrate --force

          # Cleanup
          rm -rf ~/laravel-app-tanismart
          EOF
